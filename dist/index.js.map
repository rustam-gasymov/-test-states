{"version":3,"file":"index.js","sources":["../src/features/counter/counterSlice.ts"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const configureToolsSlice = createSlice({\n  name: \"configureTools\",\n  initialState: {\n    isModalVisible: false,\n    value: 0,\n    counter: 0,\n  },\n  reducers: {\n    setIncrementValue: (state) => {\n      state.value++;\n    },\n    setNumber: (state, { payload }) => {\n      console.log(\"settnumberits new reducer from slice\", payload);\n      state.counter += payload;\n    },\n    setDecrementValue: (state, { payload }) => {\n      console.log(\"decrement from decrement\", payload);\n\n      state.value = state.value - 10;\n    },\n    changeVisibilityOfConfigureForm: (state, { payload }) => {\n      state.isModalVisible = payload;\n    },\n  },\n  extraReducers: {},\n});\n\nexport const { setDecrementValue, setNumber, changeVisibilityOfConfigureForm, setIncrementValue } =\n  configureToolsSlice.actions;\n\nexport default configureToolsSlice.reducer;\n"],"names":["configureToolsSlice","createSlice","name","initialState","isModalVisible","value","counter","reducers","setIncrementValue","state","setNumber","_a","payload","console","log","setDecrementValue","changeVisibilityOfConfigureForm","extraReducers","actions","reducer"],"mappings":"qDAEaA,EAAsBC,EAAY,CAC7CC,KAAM,iBACNC,aAAc,CACZC,gBAAgB,EAChBC,MAAO,EACPC,QAAS,GAEXC,SAAU,CACRC,kBAAmB,SAACC,GAClBA,EAAMJ,SAERK,UAAW,SAACD,EAAOE,GAAE,IAAAC,EAAOD,EAAAC,QAC1BC,QAAQC,IAAI,uCAAwCF,GACpDH,EAAMH,SAAWM,GAEnBG,kBAAmB,SAACN,EAAOE,GAAE,IAAAC,EAAOD,EAAAC,QAClCC,QAAQC,IAAI,2BAA4BF,GAExCH,EAAMJ,MAAQI,EAAMJ,MAAQ,IAE9BW,gCAAiC,SAACP,EAAOE,GAAE,IAAAC,EAAOD,EAAAC,QAChDH,EAAML,eAAiBQ,IAG3BK,cAAe,KAGFF,GAAFJ,EACXX,EAAoBkB,SAAOH,kBADKL,cAAWM,oCAAiCR,sBAG/DR,EAAoBmB"}