{"version":3,"file":"index.js","sources":["../src/features/counter/counterSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\ninterface IState {\n  isLoading?: boolean;\n  isModalVisible?: boolean;\n  value?: number;\n  counter?: number;\n}\n\nconst initialState = {\n  isModalVisible: false,\n  value: 0,\n  counter: 0,\n};\n\nexport const reducers = {\n  setIncrementValue: (state: typeof initialState) => {\n    state.value++;\n  },\n  setNumber: (state: typeof initialState, { payload }: PayloadAction<number>) => {\n    console.log(\"settnumberits new reducer from slice\", payload);\n    state.counter = state.counter + payload;\n  },\n  setDecrementValue: (state: typeof initialState, { payload }: PayloadAction) => {\n    console.log(\"decrement from decrement\", payload);\n\n    state.value = state.value - 20;\n  },\n  changeVisibilityOfConfigureForm: (\n    state: typeof initialState,\n    { payload }: PayloadAction<boolean>\n  ) => {\n    state.isModalVisible = payload;\n  },\n};\n\nexport const configureToolsSlice = createSlice({\n  name: \"configureTools\",\n  initialState,\n  reducers,\n});\n\nexport const { setDecrementValue, setNumber, changeVisibilityOfConfigureForm, setIncrementValue } =\n  configureToolsSlice.actions;\n\nexport default configureToolsSlice.reducer;\n"],"names":["reducers","setIncrementValue","state","value","setNumber","_a","payload","console","log","counter","setDecrementValue","changeVisibilityOfConfigureForm","isModalVisible","configureToolsSlice","createSlice","name","initialState","actions","reducer"],"mappings":"qDAeaA,EAAW,CACtBC,kBAAmB,SAACC,GAClBA,EAAMC,SAERC,UAAW,SAACF,EAA4BG,GAAE,IAAAC,EAAOD,EAAAC,QAC/CC,QAAQC,IAAI,uCAAwCF,GACpDJ,EAAMO,QAAUP,EAAMO,QAAUH,GAElCI,kBAAmB,SAACR,EAA4BG,GAAE,IAAAC,EAAOD,EAAAC,QACvDC,QAAQC,IAAI,2BAA4BF,GAExCJ,EAAMC,MAAQD,EAAMC,MAAQ,IAE9BQ,gCAAiC,SAC/BT,EACAG,GAAE,IAAAC,EAAOD,EAAAC,QAETJ,EAAMU,eAAiBN,IAIdO,EAAsBC,EAAY,CAC7CC,KAAM,iBACNC,aA7BmB,CACnBJ,gBAAgB,EAChBT,MAAO,EACPM,QAAS,GA2BTT,SAAQA,IAGKU,GAAFL,EACXQ,EAAoBI,SAAOP,kBADKN,cAAWO,oCAAiCV,sBAG/DY,EAAoBK"}