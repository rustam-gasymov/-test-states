{"version":3,"file":"index.js","sources":["../src/features/counter/counterSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\ninterface IState {\n  isLoading?: boolean;\n  isModalVisible?: boolean;\n  value?: number;\n  counter?: number;\n}\n\nconst initialState = {\n  isModalVisible: false,\n  value: 0,\n  counter: 0,\n};\n\nexport const configureToolsSlice = createSlice({\n  name: \"configureTools\",\n  initialState,\n  reducers: {\n    setIncrementValue: (state: typeof initialState) => {\n      state.value++;\n    },\n    setNumber: (state: typeof initialState, { payload }: PayloadAction<number>) => {\n      console.log(\"settnumberits new reducer from slice\", payload);\n      state.counter = state.counter + payload;\n    },\n    setDecrementValue: (state: typeof initialState, { payload }: PayloadAction) => {\n      console.log(\"decrement from decrement\", payload);\n\n      state.value = state.value - 20;\n    },\n  },\n});\n\nexport const { setDecrementValue, setNumber, setIncrementValue } = configureToolsSlice.actions;\n\nexport default configureToolsSlice.reducer;\n"],"names":["configureToolsSlice","createSlice","name","initialState","isModalVisible","value","counter","reducers","setIncrementValue","state","setNumber","_a","payload","console","log","setDecrementValue","actions","reducer"],"mappings":"qDAeaA,EAAsBC,EAAY,CAC7CC,KAAM,iBACNC,aARmB,CACnBC,gBAAgB,EAChBC,MAAO,EACPC,QAAS,GAMTC,SAAU,CACRC,kBAAmB,SAACC,GAClBA,EAAMJ,SAERK,UAAW,SAACD,EAA4BE,GAAE,IAAAC,EAAOD,EAAAC,QAC/CC,QAAQC,IAAI,uCAAwCF,GACpDH,EAAMH,QAAUG,EAAMH,QAAUM,GAElCG,kBAAmB,SAACN,EAA4BE,GAAE,IAAAC,EAAOD,EAAAC,QACvDC,QAAQC,IAAI,2BAA4BF,GAExCH,EAAMJ,MAAQI,EAAMJ,MAAQ,OAKnBU,GAAFJ,EAAsDX,EAAoBgB,SAAOD,kBAA5DL,EAASC,EAAAD,UAAEF,sBAE9BR,EAAoBiB"}